openapi: 3.0.0
info:
  version: 1.0.0
  title: Hokusai API
tags:
  - name: NFT
    description: Manage NFTs
paths:
  /nfts/${tokenId}:
    get:
      tags:
        - get nft
      summary: Get information of the NFT.
      operationId: getNFT
      parameters:
        - in: path
          name: tokenId
          required: true
          description: TokenID of the NFT to get.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NFT"
        "400":
          description: Invalid input
  /nfts/mint:
    post:
      tags:
        - mint
      summary: Mint a new NFT.
      operationId: mint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NFT"
        description: NFT object to mint.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid input
  /nfts/transfer:
    post:
      tags:
        - transfer
      summary: Transfer the NFT.
      operationId: transfer
      parameters:
        - name: tokenId
          in: query
          description: TokenID of the NFT to transfer.
          required: true
          schema:
            type: string
        - name: toAddress
          in: query
          description: Ethereum address to transfer the NFT to.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid input
  /nfts/burn:
    post:
      tags:
        - burn
      summary: Burn the NFT.
      operationId: burn
      parameters:
        - name: tokenId
          in: query
          description: TokenID of the NFT to burn.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid input
  /nfts/royalty:
    get:
      tags:
        - royalty
      summary: Get royalty of the NFT.
      operationId: getRoyalty
      parameters:
        - name: tokenId
          in: query
          description: TokenID to get royalty.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Royalty"
        "400":
          description: Invalid input
    post:
      tags:
        - royalty
      summary: Set royalty to the NFT.
      operationId: setRoyalty
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Royalty"
        description: NFT royalty to set.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid input
servers:
  - url: /v1
components:
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
  schemas:
    NFT:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          description: A name for the NFT.
        description:
          type: string
          description: A description for the NFT.
        tokenUri:
          type: string
          description: A Metadata URI.
    Royalty:
      type: object
      properties:
        payee:
          type: string
          description: A Ethereum address of the payee.
        commission:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
    ApiResponse:
      type: object
      properties:
        txHash:
          type: string
          description: A transaction hash of the transaction.
