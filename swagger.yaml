openapi: 3.0.0
info:
  version: 1.0.0
  title: Hokusai API
  contact:
    email: command@hokusai.app
    name: JapanMonoBundle
    url: 'https://hokusai.app'
  description: The worldâ€™s most powerful and easy-to-use NFT APIs
tags:
  - name: NFT
    description: Manage NFTs
  - name: Royalty
    description: Manage Royalty
paths:
  '/nfts/{contractId}/mint':
    post:
      tags:
        - NFT
      summary: Mint a new NFT.
      description: Mint a new NFT
      operationId: mint
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: contractId
          required: true
          description: Target contract ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MintNFT'
        description: NFT object to mint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithTxHash'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  '/nfts/{contractId}/{tokenId}':
    get:
      tags:
        - NFT
      summary: Get information of the NFT.
      description: Get NFT Information.
      operationId: getNFT
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: contractId
          required: true
          description: Target contract ID.
          schema:
            type: string
        - in: path
          name: tokenId
          required: true
          description: TokenID of the NFT to get.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFT'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  '/nfts/{contractId}/transfer':
    post:
      tags:
        - NFT
      summary: Transfer a NFT with meta transaction.
      description: Transfer a NFT with meta transaction.
      operationId: transfer
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: contractId
          required: true
          description: Target contract ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferNFT'
        description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithTxHash'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  '/nfts/{contractId}/{tokenId}/royalty':
    get:
      tags:
        - Royalty
      summary: Get royalty of the NFT.
      description: Get royalty information of NFT.
      operationId: getRoyalty
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: contractId
          required: true
          description: Target contract ID.
          schema:
            type: string
        - in: path
          name: tokenId
          description: TokenID to get royalty.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Royalty'
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    post:
      tags:
        - Royalty
      summary: Set royalty to the NFT.
      description: Set NFT royalty.
      operationId: setRoyalty
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: contractId
          required: true
          description: Target contract ID.
          schema:
            type: string
        - in: path
          name: tokenId
          required: true
          description: Target token ID.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Royalty'
        description: NFT royalty to set.
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithTxHash'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
servers:
  - url: 'https://polygon.hokusai.app/v1'
    description: Mainnet
  - url: 'https://mumbai.hokusai.app/v1'
    description: Testnet
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: key
  schemas:
    NFT:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        tokenUri:
          type: string
          description: A Metadata URI.
    MintNFT:
      type: object
      properties:
        to:
          type: string
          description: A Ethereum address to mint the NFT to.
        tokenUri:
          type: string
          description: A Metadata URI.
    TransferNFT:
      type: object
      x-examples:
        example:
          request:
            from: '0xbe43fd23a0ba75c1c2f7a8d93c9754f7294da724'
            to: '0x689f8e5913c158ffb5ac5aeb83b3c875f5d20309'
            value: 0
            gas: 1000000
            nonce: 75
            data: testdata
      properties:
        request:
          type: object
          properties:
            from:
              type: string
              description: user wallet address to send to
            to:
              type: string
              description: contractAddress
            value:
              type: number
              description: amount of token that you want to send
            gas:
              type: number
              description: gas fee
            nonce:
              type: integer
              description: nonce
            data:
              type: string
              description: encoded data
    Royalty:
      type: object
      properties:
        receiver:
          type: string
          description: A Ethereum address of the receiver.
        parcentage:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
    ResponseWithTxHash:
      type: object
      properties:
        txHash:
          type: string
          description: A transaction hash of the transaction.
security:
  - ApiKeyAuth: []
